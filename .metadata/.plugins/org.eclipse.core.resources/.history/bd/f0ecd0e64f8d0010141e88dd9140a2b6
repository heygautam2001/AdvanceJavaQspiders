package dml_prepareStatement_execution;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Properties;
import java.util.Scanner;

public class InsertStudent {
	
	Connection con;
 {
	 try {
			// step 1 : load the driver
			Class.forName("org.postgresql.Driver");
			
			//step2: Connection properties file
			FileInputStream fis = new FileInputStream("/Users/gautam/Desktop/AdvanceJava/my-application/src/main/resources/data.properties");
			
			Properties property = new Properties();
			
			property.load(fis);
			
			String url = property.getProperty("url");
			
			con = DriverManager.getConnection(url , property);
			System.out.println("Connection Established");
			
			
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}catch(Throwable e) {
			e.printStackTrace();
		}
 }
 
 public boolean insertStudent() {
	 try {
	 String query = "insert into student values(?,?,?,?,?)";
	 
	 PreparedStatement ps = con.prepareStatement(query);
	 
	 Scanner sc = new Scanner(System.in);
	 
	 System.out.println("Enter the id");
	 int id = sc.nextInt();
	 sc.nextLine();
	 
	 System.out.print("Enter the name ");
	 String name = sc.nextLine();
	 
	 System.out.println("Enter the percentage : ");
	 double perc = sc.nextDouble();
	 sc.nextLine();
	 
	 System.out.println("Enter the phone ");
	 Long phone = sc.nextLong();
	 sc.nextLine();
	 
	 System.out.println("Enter the string : ");
	 String dop = sc.nextLine();
	 
	 ps.setInt(1, id);
	 ps.setString(2, name);
	 ps.setDouble(3,perc);
	 ps.setLong(4, phone);
	 ps.setDate(5, Date.valueOf(dop));
	 
	 /*
	 // way2 1 => execute();
	 boolean r1 = ps.execute();
	 System.out.println(r1);
	 
	 */
	 
	 int r2 = ps.executeUpdate();
	 if(r2 > 0) {
		 System.out.println("Query executed successfully");
		 
	 }else {
		 System.out.println("Failed to execute query");
		return false;
	 }
	 
	 
	}catch(SQLException e) {
		e.printStackTrace();
		return false;
	}
	 
	 return true;
	 
  
 }
 
 public boolean updateRecord() {
	 try {
	 String query = "UPDATE student SET name = ? , percentage = ? , phone = ? , dop = ? WHERE id = ?";
	 
	 PreparedStatement ps = con.prepareStatement(query);
	 
	 Scanner sc = new Scanner(System.in);
	 
	
	 
	 System.out.print("Enter the name ");
	 String name = sc.nextLine();
	 
	 System.out.println("Enter the percentage : ");
	 double perc = sc.nextDouble();
	 sc.nextLine();
	 
	 System.out.println("Enter the phone ");
	 Long phone = sc.nextLong();
	 sc.nextLine();
	 
	 System.out.println("Enter the string : ");
	 String dop = sc.nextLine();
	 
	 System.out.println("Enter the id");
	 int id = sc.nextInt();
	 sc.nextLine();
	
	 ps.setString(1, name);
	 ps.setDouble(2,perc);
	 ps.setLong(3, phone);
	 ps.setDate(4, Date.valueOf(dop));
	 ps.setInt(5, id);
	 
	 
	 /*
	 // way2 1 => execute();
	 boolean r1 = ps.execute();
	 System.out.println(r1);
	 
	 */
	 
	 int r2 = ps.executeUpdate();
	 if(r2 > 0) {
		 System.out.println("Query executed successfully");
		 
	 }else {
		 System.out.println("Failed to execute query");
		return false;
	 }
	 
	 
	}catch(SQLException e) {
		e.printStackTrace();
		return false;
	}
	 
	 return true;
	 
  
 }
 
 public boolean deleteRecord() {
	 try {
	 String query = "DELETE FROM student WHERE id = ?";
	 
	 PreparedStatement ps = con.prepareStatement(query);
	 
	 Scanner sc = new Scanner(System.in); 
	 System.out.println("Enter the id");
	 int id = sc.nextInt();
	 sc.nextLine();
	 ps.setInt(1, id);
	 
	 
	 /*
	 // way2 1 => execute();
	 boolean r1 = ps.execute();
	 System.out.println(r1);
	 
	 */
	 
	 int r2 = ps.executeUpdate();
	 if(r2 > 0) {
		 System.out.println("Query executed successfully");
		 
	 }else {
		 System.out.println("Failed to execute query");
		return false;
	 }
	 
	 
	}catch(SQLException e) {
		e.printStackTrace();
		return false;
	}
	 
	 return true;
	 
  
 }
 
 
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		InsertStudent s = new InsertStudent();
		s.insertStudent();
		s.deleteRecord();

	}

}
